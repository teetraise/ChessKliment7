// // –ú–æ–¥—É–ª—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
// const Connection = {
//     // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
//     async connect() {
//         const nameInput = document.getElementById('playerName');
//         const hostInput = document.getElementById('serverHost');
//         const wsPortInput = document.getElementById('wsPort');
        
//         GAME_STATE.playerName = nameInput.value.trim();
//         const host = hostInput.value.trim() || CONFIG.DEFAULT_CONNECTION.host;
//         const wsPort = wsPortInput.value.trim() || CONFIG.DEFAULT_CONNECTION.wsPort;

//         if (!GAME_STATE.playerName) {
//             Notifications.show('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è!', CONFIG.NOTIFICATION.types.ERROR);
//             return;
//         }

//         try {
//             // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WebSocket
//             const wsUrl = `ws://${host}:${wsPort}/?sessionId=${GAME_STATE.sessionId}`;
//             GAME_STATE.webSocket = new WebSocket(wsUrl);

//             GAME_STATE.webSocket.onopen = () => {
//                 GAME_STATE.isConnected = true;
//                 GAME_STATE.connectedAt = new Date();
//                 this.updateConnectionStatus();
                
//                 // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
//                 this.sendMessage({
//                     type: CONFIG.MESSAGE_TYPES.REGISTER,
//                     sessionId: GAME_STATE.sessionId,
//                     playerName: GAME_STATE.playerName
//                 });

//                 Notifications.show('–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É!', CONFIG.NOTIFICATION.types.SUCCESS);
//                 Chat.addSystemMessage(`–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É –∫–∞–∫ ${GAME_STATE.playerName}`);
//             };

//             GAME_STATE.webSocket.onmessage = (event) => {
//                 this.handleMessage(event.data);
//             };

//             GAME_STATE.webSocket.onclose = () => {
//                 GAME_STATE.isConnected = false;
//                 this.updateConnectionStatus();
//                 Notifications.show('–û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', CONFIG.NOTIFICATION.types.ERROR);
//                 Chat.addSystemMessage('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ');
//             };

//             GAME_STATE.webSocket.onerror = (error) => {
//                 Notifications.show('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', CONFIG.NOTIFICATION.types.ERROR);
//                 Chat.addSystemMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
//                 console.error('WebSocket error:', error);
//             };

//         } catch (error) {
//             Notifications.show('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + error.message, CONFIG.NOTIFICATION.types.ERROR);
//             console.error('Connection error:', error);
//         }
//     },

//     // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
//     disconnect() {
//         if (GAME_STATE.webSocket) {
//             GAME_STATE.webSocket.close();
//         }
//         GAME_STATE.isConnected = false;
//         GAME_STATE.connectedAt = null;
//         this.updateConnectionStatus();
//         Chat.addSystemMessage('–û—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
//     },

//     // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
//     updateConnectionStatus() {
//         const statusDiv = document.getElementById('connectionStatus');
//         const connectBtn = document.getElementById('connectBtn');
//         const chatInput = document.getElementById('chatInput');
//         const sendChatBtn = document.getElementById('sendChatBtn');
//         const resetBtn = document.getElementById('resetBtn');
//         const clearBtn = document.getElementById('clearBtn');

//         if (GAME_STATE.isConnected) {
//             statusDiv.innerHTML = '<span class="status-connected">‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω</span>';
//             connectBtn.textContent = 'üîå –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è';
//             chatInput.disabled = false;
//             sendChatBtn.disabled = false;
//             resetBtn.disabled = false;
//             clearBtn.disabled = false;
//         } else {
//             statusDiv.innerHTML = '<span class="status-disconnected">‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</span>';
//             connectBtn.textContent = 'üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è';
//             chatInput.disabled = true;
//             sendChatBtn.disabled = true;
//             resetBtn.disabled = true;
//             clearBtn.disabled = true;
//         }
//     },

//     // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket
//     sendMessage(message) {
//         if (GAME_STATE.webSocket && GAME_STATE.webSocket.readyState === WebSocket.OPEN) {
//             try {
//                 GAME_STATE.webSocket.send(JSON.stringify(message));
//                 return true;
//             } catch (error) {
//                 console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
//                 Notifications.show('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è', CONFIG.NOTIFICATION.types.ERROR);
//                 return false;
//             }
//         } else {
//             Notifications.show('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', CONFIG.NOTIFICATION.types.ERROR);
//             return false;
//         }
//     },

//     // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ö–æ–¥–∞
//     sendMove(from, to, piece) {
//         if (!GAME_STATE.webSocket || GAME_STATE.webSocket.readyState !== WebSocket.OPEN) {
//             Notifications.show('–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', CONFIG.NOTIFICATION.types.ERROR);
//             return false;
//         }

//         const move = {
//             type: CONFIG.MESSAGE_TYPES.TCP_MOVE,
//             sessionId: GAME_STATE.sessionId,
//             from: from,
//             to: to,
//             piece: piece,
//             timestamp: new Date().toISOString()
//         };

//         if (this.sendMessage(move)) {
//             Notifications.show(`–•–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${from} ‚Üí ${to}`, CONFIG.NOTIFICATION.types.SUCCESS);
//             return true;
//         }
//         return false;
//     },

//     // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
//     sendChatMessage(message) {
//         if (!GAME_STATE.isConnected || !GAME_STATE.webSocket) {
//             Notifications.show('–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π', CONFIG.NOTIFICATION.types.ERROR);
//             return false;
//         }

//         if (!message || message.trim().length === 0) {
//             Notifications.show('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º', CONFIG.NOTIFICATION.types.ERROR);
//             return false;
//         }

//         const chatMessage = {
//             type: CONFIG.MESSAGE_TYPES.CHAT,
//             sessionId: GAME_STATE.sessionId,
//             message: message.trim(),
//             timestamp: new Date().toISOString()
//         };

//         return this.sendMessage(chatMessage);
//     },

//     // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –∞–≤–∞—Ç–∞—Ä–∞
//     sendAvatarPosition(x, y) {
//         if (!GAME_STATE.webSocket || GAME_STATE.webSocket.readyState !== WebSocket.OPEN) {
//             return false;
//         }

//         // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
//         if (x < 0 || x >= CONFIG.GAME.boardSize || y < 0 || y >= CONFIG.GAME.boardSize) {
//             console.warn('–ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–≤–∞—Ç–∞—Ä–∞:', x, y);
//             return false;
//         }

//         const avatarPosition = {
//             type: CONFIG.MESSAGE_TYPES.AVATAR_POSITION,
//             sessionId: GAME_STATE.sessionId,
//             x: x,
//             y: y,
//             timestamp: new Date().toISOString()
//         };

//         return this.sendMessage(avatarPosition);
//     },

//     // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
//     handleMessage(data) {
//         try {
//             const message = JSON.parse(data);
            
//             switch (message.type) {
//                 case CONFIG.MESSAGE_TYPES.MOVE:
//                     if (message.player && message.move) {
//                         ChessBoard.handleRemoteMove(message.player, message.move);
//                     }
//                     break;

//                 case CONFIG.MESSAGE_TYPES.CHAT:
//                     if (message.player && message.message) {
//                         Chat.addMessage(message.player, message.message, 'user');
//                     }
//                     break;

//                 case CONFIG.MESSAGE_TYPES.EVENT:
//                     if (message.message) {
//                         Chat.addMessage('–°–∏—Å—Ç–µ–º–∞', message.message, 'event');
//                         GAME_STATE.eventHistory.push({
//                             message: message.message,
//                             timestamp: new Date()
//                         });
//                     }
//                     break;

//                 case CONFIG.MESSAGE_TYPES.AVATAR_POSITION:
//                     if (message.sessionId && message.x !== undefined && message.y !== undefined) {
//                         ChessBoard.updatePlayerAvatar(message.sessionId, message.x, message.y);
//                     }
//                     break;

//                 case 'player_joined':
//                     if (message.playerName) {
//                         Chat.addSystemMessage(`–ò–≥—Ä–æ–∫ ${message.playerName} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ`);
//                         Notifications.show(`${message.playerName} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è`, CONFIG.NOTIFICATION.types.INFO);
//                     }
//                     break;

//                 case 'player_left':
//                     if (message.playerName) {
//                         Chat.addSystemMessage(`–ò–≥—Ä–æ–∫ ${message.playerName} –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É`);
//                         Notifications.show(`${message.playerName} —É—à–µ–ª`, CONFIG.NOTIFICATION.types.INFO);
//                     }
//                     break;

//                 default:
//                     console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:', message.type, message);
//             }
//         } catch (error) {
//             // –ï—Å–ª–∏ –Ω–µ JSON, —Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
//             console.log('–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', data);
//             Chat.addMessage('–°–µ—Ä–≤–µ—Ä', data, 'system');
//         }
//     },

//     // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
//     getConnectionStatus() {
//         return {
//             isConnected: GAME_STATE.isConnected,
//             connectedAt: GAME_STATE.connectedAt,
//             sessionId: GAME_STATE.sessionId,
//             playerName: GAME_STATE.playerName,
//             webSocketState: GAME_STATE.webSocket ? GAME_STATE.webSocket.readyState : null
//         };
//     },

//     // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑—Ä—ã–≤–µ —Å–≤—è–∑–∏
//     async reconnect() {
//         if (GAME_STATE.isConnected) {
//             console.log('–£–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É');
//             return;
//         }

//         console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
//         Chat.addSystemMessage('–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É...');
        
//         await this.connect();
//     },

//     // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (heartbeat)
//     startHeartbeat() {
//         if (this.heartbeatInterval) {
//             clearInterval(this.heartbeatInterval);
//         }

//         this.heartbeatInterval = setInterval(() => {
//             if (GAME_STATE.isConnected && GAME_STATE.webSocket) {
//                 if (GAME_STATE.webSocket.readyState === WebSocket.OPEN) {
//                     this.sendMessage({
//                         type: 'ping',
//                         sessionId: GAME_STATE.sessionId,
//                         timestamp: new Date().toISOString()
//                     });
//                 } else {
//                     console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ, –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
//                     this.reconnect();
//                 }
//             }
//         }, 30000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
//     },

//     // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ heartbeat
//     stopHeartbeat() {
//         if (this.heartbeatInterval) {
//             clearInterval(this.heartbeatInterval);
//             this.heartbeatInterval = null;
//         }
//     }
// };

// // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å HTML
// async function toggleConnection() {
//     if (GAME_STATE.isConnected) {
//         Connection.disconnect();
//         Connection.stopHeartbeat();
//     } else {
//         await Connection.connect();
//         Connection.startHeartbeat();
//     }
// }